#+Title: The EN Universal Propbank

The files on this directory were obtained from the merge of the
sources:

1. https://github.com/universaldependencies/UD_English-EWT
2. https://github.com/propbank/propbank-release
3. https://catalog.ldc.upenn.edu/LDC2012T13

The main idea is to project the rolesets and its arguments (2) on top
of the constituent analysis in the original treebank (3) to the
dependency trees from the UD analysis (1). 

Consider the sentence and its original annotations obtained from
(2,3):

- file :: google/ewt/weblog/00/blogspot.com_thelameduck_20041119192207_ENG_20041119_192207.xml
- sentence :: 7
- text :: With the demand so high, the question arises on to who
  should be or has the right to be the Santa of nuclear weapons.

#+END_EXAMPLE

|  0 | With     | IN  | (TOP(S(SBAR* | -        | -           | *    | *           | *      | (ARGM-ADV* | *           | *       | *      | *      |
|  1 | the      | DT  | (S(NP*       | -        | -           | *    | (ARG1*      | *      | *          | *           | *       | *      | *      |
|  2 | demand   | NN  | *)           | demand   | demand.01   | (V*) | *)          | *      | *          | *           | *       | *      | *      |
|  3 | so       | RB  | (ADJP*       | -        | -           | *    | (ARGM-EXT*) | *      | *          | *           | *       | *      | *      |
|  4 | high     | JJ  | *)))         | heighten | high.02     | *    | (V*)        | *      | *)         | *           | *       | *      | *      |
|  5 | ,        | ,   | *            | -        | -           | *    | *           | *      | *          | *           | *       | *      | *      |
|  6 | the      | DT  | (NP(NP*      | -        | -           | *    | *           | *      | (ARG1*     | *           | *       | *      | *      |
|  7 | question | NN  | *))          | question | question.01 | *    | *           | (V*)   | *)         | *           | *       | *      | *      |
|  8 | arises   | VBZ | (VP*         | rise     | arise.02    | *    | *           | *      | (V*)       | *           | *       | *      | *      |
|  9 | on       | IN  | (PP*         | -        | -           | *    | *           | (ARG1* | (C-ARG1*   | *           | *       | *      | *      |
| 10 | to       | IN  | (PP*         | -        | -           | *    | *           | *      | *          | *           | *       | *      | *      |
| 11 | who      | WP  | (SBAR(WHNP*) | -        | -           | *    | *           | *      | *          | (ARG1*)     | (ARG0*) | *      | *      |
| 12 | should   | MD  | (S(VP(VP*    | -        | -           | *    | *           | *      | *          | (ARGM-MOD*) | *       | *      | *      |
| 13 | be       | VB  | (VP*))       | be       | be.01       | *    | *           | *      | *          | (V*)        | *       | *      | *      |
| 14 | or       | CC  | *            | -        | -           | *    | *           | *      | *          | *           | *       | *      | *      |
| 15 | has      | VBZ | (VP*         | have     | have.03     | *    | *           | *      | *          | *           | (V*)    | *      | *      |
| 16 | the      | DT  | (NP*         | -        | -           | *    | *           | *      | *          | *           | (ARG1*  | *      | *      |
| 17 | right    | NN  | *            | right    | right.05    | *    | *           | *      | *          | *           | *       | (V*)   | *      |
| 18 | to       | TO  | (S(VP*       | -        | -           | *    | *           | *      | *          | *           | *       | (ARG2* | *      |
| 19 | be       | VB  | (VP*)))))    | be       | be.01       | *    | *           | *      | *          | *           | *       | *      | (V*)   |
| 20 | the      | DT  | (NP(NP*      | -        | -           | *    | *           | *      | *          | (ARG2*      | *       | *      | (ARG2* |
| 21 | Santa    | NNP | *)           | -        | -           | *    | *           | *      | *          | *           | *       | *      | *      |
| 22 | of       | IN  | (PP*         | -        | -           | *    | *           | *      | *          | *           | *       | *      | *      |
| 23 | nuclear  | JJ  | (NP*         | -        | -           | *    | *           | *      | *          | *           | *       | *      | *      |
| 24 | weapons  | NNS | *)))))))))   | -        | -           | *    | *           | *)     | *)         | *)          | *)      | *)     | *)     |
| 25 | .        | .   | *))          | -        | -           | *    | *           | *      | *          | *           | *       | *      | *      |

The same sentence in the `.conllup` files is below (`|` replaced by
`/` only for formating this notes). The arguments marks will be on the
head of the subtree from the origial constituent.

- sent_id :: weblog-blogspot.com_thelameduck_20041119192207_ENG_20041119_192207-0008

|  1 | With     | with     | SCONJ | IN  | _                                                     |  5 | mark   | 5:mark            | _             | _           | _                           |
|  2 | the      | the      | DET   | DT  | Definite=Def/PronType=Art                             |  3 | det    | 3:det             | _             | _           | _                           |
|  3 | demand   | demand   | NOUN  | NN  | Number=Sing                                           |  5 | nsubj  | 5:nsubj           | _             | demand.01   | _                           |
|  4 | so       | so       | ADV   | RB  | _                                                     |  5 | advmod | 5:advmod          | _             | _           | _                           |
|  5 | high     | high     | ADJ   | JJ  | Degree=Pos                                            |  9 | advcl  | 9:advcl:with      | SpaceAfter=No | high.02     | ARG1:3/ARGM-EXT:4           |
|  6 | ,        | ,        | PUNCT | ,   | _                                                     |  9 | punct  | 9:punct           | _             | _           | _                           |
|  7 | the      | the      | DET   | DT  | Definite=Def/PronType=Art                             |  8 | det    | 8:det             | _             | _           | _                           |
|  8 | question | question | NOUN  | NN  | Number=Sing                                           |  9 | nsubj  | 9:nsubj           | _             | question.01 | ARG1:14                     |
|  9 | arises   | arise    | VERB  | VBZ | Mood=Ind/Number=Sing/Person=3/Tense=Pres/VerbForm=Fin |  0 | root   | 0:root            | _             | arise.02    | ARGM-ADV:5/ARG1:8/C-ARG1:14 |
| 10 | on       | on       | ADP   | IN  | _                                                     | 14 | mark   | 14:mark           | _             | _           | _                           |
| 11 | to       | to       | SCONJ | IN  | _                                                     | 14 | mark   | 14:mark           | _             | _           | _                           |
| 12 | who      | who      | PRON  | WP  | PronType=Int                                          | 14 | nsubj  | 14:nsubj/16:nsubj | _             | _           | _                           |
| 13 | should   | should   | AUX   | MD  | VerbForm=Fin                                          | 14 | aux    | 14:aux            | _             | _           | _                           |
| 14 | be       | be       | AUX   | VB  | VerbForm=Inf                                          |  9 | obl    | 9:obl             | _             | be.01       | ARG1:12/ARGM-MOD:13/ARG2:22 |
| 15 | or       | or       | CCONJ | CC  | _                                                     | 16 | cc     | 16:cc             | _             | _           | _                           |
| 16 | has      | have     | VERB  | VBZ | Mood=Ind/Number=Sing/Person=3/Tense=Pres/VerbForm=Fin | 14 | conj   | 9:obl/14:conj:or  | _             | have.03     | ARG0:12/ARG1:18             |
| 17 | the      | the      | DET   | DT  | Definite=Def/PronType=Art                             | 18 | det    | 18:det            | _             | _           | _                           |
| 18 | right    | right    | NOUN  | NN  | Number=Sing                                           | 16 | obj    | 16:obj            | _             | right.05    | ARG2:22                     |
| 19 | to       | to       | PART  | TO  | _                                                     | 22 | mark   | 22:mark           | _             | _           | _                           |
| 20 | be       | be       | AUX   | VB  | VerbForm=Inf                                          | 22 | cop    | 22:cop            | _             | be.01       | ARG2:22                     |
| 21 | the      | the      | DET   | DT  | Definite=Def/PronType=Art                             | 22 | det    | 22:det            | _             | _           | _                           |
| 22 | Santa    | Santa    | PROPN | NNP | Number=Sing                                           | 18 | acl    | 18:acl:to         | _             | _           | _                           |
| 23 | of       | of       | ADP   | IN  | _                                                     | 25 | case   | 25:case           | _             | _           | _                           |
| 24 | nuclear  | nuclear  | ADJ   | JJ  | Degree=Pos                                            | 25 | amod   | 25:amod           | _             | _           | _                           |
| 25 | weapons  | weapon   | NOUN  | NNS | Number=Plur                                           | 22 | nmod   | 22:nmod:of        | SpaceAfter=No | _           | _                           |
| 26 | .        | .        | PUNCT | .   | _                                                     |  9 | punct  | 9:punct           | _             | _           | _                           |


** How to execute the code

The code should work only in MacOS or Linux. To reexecute the code you
will need the following tools:

- Common Lisp implementation. Tested in http://sbcl.org
- The GNU Awk and Bash

When these files will need to be regenerate? Whenever a new release of
any dataset (1-3) above is made public.

The dataset (3) was used to complete the stand-off files from the
Propbank dataset. We followed the proceduce described in the README of
the propbank release data to produce the =.gold_conll= files using the
script =map_all_to_conll.py= provided in the propbank release.

Consider that you have cloned the propbank repository (2) above to the
directory =$PBHOME= and this directory is the =$UPENHOME=. Before
execute the comands below, edit the =merge.lisp= file changing the
location of the UD files in the function =main=. Finally execute:

#+BEGIN_SRC bash
cd $PBHOME
find data/google -name "*.gold_conll" -exec awk -f $UPHOME/conll-to-conllu.awk {} \; > propbank-all.conllu
mv propbank-all.conllu $UPHOME/
cd $UPHOME
sh make.sh
#+END_SRC

The output format is `conllup` and it is suggested to be used in all
other files in this repository.

** Statistics

Top 20 predicates in the dataset:

#+begin_example
% awk '$0 ~ /^[0-9]/ {print $11}' en_ewt-up-*.conllup | sort | uniq -c | sort -nr | head -20
207702 _
6076 be.01
2949 be.03
1583 have.01
1176 do.01
1070 have.03
 544 say.01
 511 do.02
 510 know.01
 472 be.02
 417 go.02
 412 want.01
 375 see.01
 374 thank.01
 368 need.01
 346 think.01
 344 use.01
 338 get.01
 289 work.01
 253 call.02
#+end_example


Verbs not tagged as predicate in the propbank data:

#+begin_example
% awk '$4 ~ /^V/ && $10 !~ /\(V\*/ {print $3}' propbank-all.conllu | sort | uniq -c | sort -nr | head
  51 including
  47 following
  46 attached
  42 regarding
  26 according
  20 According
  19 based
  15 revised
  14 was
  12 proposed
#+end_example

Verbs not tagged as predicate in the conllup files:

#+begin_example
% awk '$4 ~ /AUX|VERB/ && $11 == "_" {print $4,$3}' en_ewt-up*.conllup | sort | uniq -c | sort -nr | head -20
1266 AUX will
 878 AUX can
 801 AUX would
 360 AUX could
 308 AUX should
 228 AUX may
  97 AUX might
  77 AUX must
  51 VERB include
  51 VERB follow
  49 VERB regard
  48 VERB attach
  46 VERB accord
  35 AUX shall
  24 AUX be
  22 VERB base
  18 VERB revise
  15 VERB give
  15 VERB estimate
  15 VERB be
#+end_example

Words tagged as predicates by POS tags (in the original PTB tags):

#+begin_example
% awk '$10 ~ /\(V\*/  {print $4}' propbank-all.conllu | sort | uniq -c
   1 CD
   3 GW
2679 JJ
 158 JJR
  13 JJS
6724 NN
2041 NNS
   1 RB
11663 VB
6398 VBD
3648 VBG
4300 VBN
6853 VBP
5777 VBZ
#+end_example

The same but in the output files:

#+begin_example
% awk '$0 ~ /^[0-9]/ && $11 != "_" {print $4}' en_ewt*.conllup | sort | uniq -c | sort -nr | head -20
27315 VERB
11325 AUX
8763 NOUN
2849 ADJ
   3 X
   2 ADV
   1 SCONJ
#+end_example

The following cases of discontinuous and reference arguments:

#+BEGIN_EXAMPLE
% awk '$0 ~ /C-V\*/ {print}' propbank-all.conllu | wc -l
     187

% awk '$0 ~ /C-ARG[0-9]\*/ {print}' propbank-all.conllu | wc -l
     695

% awk '$0 ~ /R-ARG[0-9]\*/ {print}' propbank-all.conllu | wc -l
    1292
#+END_EXAMPLE

** Notes

1. constituents splited into multiple subtree. In some sentences,
   arguments in a constituent span over multiple subtrees. See the
   case of 's' and 'call' as ARG1 of the verb 'let'. Currently, our
   solution is to duplicate the argument in the column as shown
   below. Note also the case of 'call off' (discontinuous verb).

#+BEGIN_EXAMPLE
sent_id = answers-20070723111604AAzUvhb_ans-0006
text = Lets call the whole thing off.
─┮  
 ╰─┮Let VERB root		V	_ 
   ├─╼s PRON obj		ARG1	ARG0 
   ├─┮call VERB xcomp		ARG1	V 
   │ │ ╭─╼the DET det		_	_ 
   │ │ ├─╼whole ADJ amod	_	_ 
   │ ├─┶thing NOUN obj		_	ARG1 
   │ ╰─╼off ADP compound:prt	_	C-V 
   ╰─╼. PUNCT punct		_	_ 
#+END_EXAMPLE


2. Difference between PTB POS tag and UD XPOSTAG. The documentation of
   UD_English-EWT treebank says that XPOSTAG field preserved the
   original value of the dataset (3) with manual annotation and
   corrections. We found 266 tokens with different values maked in the
   MISC field with the key PTBPOS.

#+BEGIN_EXAMPLE
% grep PTBPOS en_ewt*.conllup | wc -l
     266
#+END_EXAMPLE

3. Missing sentences or mismatch in the number of tokens. In the final
   data, few sentences were annotated with a =metadata= field. The
   =no-up= means the sentence was not in the propbank release
   (reported [[https://github.com/propbank/propbank-release/issues/7][here]]). The only case where the sentence has different
   number of tokens in the datasets (1,2/3) is marked with
   =diff-number-tokens= (reported [[https://github.com/propbank/propbank-release/issues/8][here]]).

#+BEGIN_EXAMPLE
% grep "# propbank" *.conllup | sort | uniq -c
  28 en_ewt-up-dev.conllup:# propbank = no-up
  15 en_ewt-up-test.conllup:# propbank = no-up
   1 en_ewt-up-train.conllup:# propbank = diff-number-tokens
#+END_EXAMPLE

4. In the first example of this file, note that once the arguments of
   predicates are transformed to pointers to the HEAD of subtrees, the
   ARG2 of 'right' (previous 'to be the Santa of nuclear weapons') was
   identified with the argument ARG2 of the verb 'be' (previous 'the
   Santa of nuclear weapons').




